% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EtE_changes.R
\name{EtE_changes}
\alias{EtE_changes}
\title{Creates Key of Harmonized Adm. Units}
\usage{
EtE_changes(df_status, df_change, from , to , jointly = FALSE)
}
\arguments{
\item{df_status}{A data object: Panel of status (object of type: \code{data.frame} or \code{list})}

\item{df_change}{A data object: Panel of changes (object of type: \code{data.frame} or \code{list})}

\item{from}{An integer: Start year of panel}

\item{to}{An integer: End year of panel}

\item{jointly}{A Boolean: Request of harmonizing the types of adm. units jointly. Default \code{FALSE}.
Important Note: If \code{jointly == TRUE} status and change information have to be supplied as a list.
The function is agnostic to the ordering of the elements in the list.}
}
\value{
A \code{data.frame} object with 4 or 7 (joint harmonization) columns. Allows for a 1:1 mapping of all active identifiers in a year to their cluster.
\itemize{
\item \code{geoID} - original numeric identifier
\item \code{name} - name of adm. unit
\item \code{cluster_id} - cluster identifier the unit is assigned to
\item \code{year} - year of the mapping
}
For joint harmonization the lower level adm. unit is mapped to corresponding
\itemize{
\item \code{Gcluster_id} - same-level cluster identifier
\item \code{Ccluster_id} - top-level cluster identifier
}
}
\description{
Takes the data frames created by \code{\link[=status_quo]{status_quo()}} and \code{\link[=gather_change]{gather_change()}}, returns a key that maps each identifier
to their traceable cluster.

Clusters are defined as the least common unit which can be uniquely distinguished at any given point in time
from all other adm. units.

Keys can be generated for each type of adm. unit independently or jointly. The use-case for joint harmonization
can be the need to include fixed-effects of the top-level administrative unit.
}
\examples{
# Information on status
stat_mun <- status_quo(type = "kommune", from = 1999, to = 2018)
# Information on changes
chg_mun <- gather_change(type = "kommune", from = 1999, to = 2018)

#Generate key
key_mun <- EtE_changes(df_status = stat_mun, df_change = chg_mun, from = 1999, to = 2018 , jointly = FALSE)


# Joint harmonization
# repeat information for BSU:
stat_bsu <- status_quo(type = "grunnkrets", from = 1999, to = 2018)
chg_bsu <- gather_change(type = "grunnkrets", from = 1999, to = 2018)

#combine in list
stat_list <- list(stat_bsu, stat_mun) # function handles the ordering independently
chg_list <- list(chg_mun, chg_bsu)

key_joint <- EtE_changes(df_status = stat_list, df_change = chg_list, from = 1999, to = 2018 , jointly = TRUE)
}
